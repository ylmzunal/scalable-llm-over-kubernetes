name: Deploy to Google Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: llm-chatbot-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: llm-chatbot-backend
  IMAGE: llm-chatbot-backend
  
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Install GKE gcloud auth plugin'
      run: |-
        gcloud components install gke-gcloud-auth-plugin

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    # Configure Docker to use the gcloud command-line tool as a credential helper
    - name: Configure Docker for Artifact Registry
      run: |-
        gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # Build the Docker image
    - name: Build Docker image
      run: |-
        docker build \
          --tag "us-central1-docker.pkg.dev/$PROJECT_ID/llm-chatbot-repo/$IMAGE:$GITHUB_SHA" \
          --tag "us-central1-docker.pkg.dev/$PROJECT_ID/llm-chatbot-repo/$IMAGE:latest" \
          .

    # Push the Docker image to Google Artifact Registry
    - name: Publish Docker image
      run: |-
        docker push "us-central1-docker.pkg.dev/$PROJECT_ID/llm-chatbot-repo/$IMAGE:$GITHUB_SHA"
        docker push "us-central1-docker.pkg.dev/$PROJECT_ID/llm-chatbot-repo/$IMAGE:latest"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy to GKE
      run: |-
        # Apply basic resources first
        kubectl apply -f k8s/rbac.yaml
        
        # Apply cloud-specific configurations
        kubectl apply -f k8s/configmap-cloud.yaml
        
        # Create secrets if they don't exist (currently empty for Ollama deployment)
        kubectl create secret generic llm-chatbot-secrets \
          --from-literal=placeholder="none" \
          --dry-run=client -o yaml | kubectl apply -f -
        
        # Update cloud deployment with correct image
        sed "s|gcr.io/PROJECT_ID/llm-chatbot-backend:latest|us-central1-docker.pkg.dev/$PROJECT_ID/llm-chatbot-repo/$IMAGE:$GITHUB_SHA|g" k8s/backend-deployment-cloud.yaml > /tmp/deployment.yaml
        kubectl apply -f /tmp/deployment.yaml
        
        # Apply cloud-specific services and HPA
        kubectl apply -f k8s/backend-service-cloud.yaml
        kubectl apply -f k8s/hpa-cloud.yaml
        
        # Verify deployment
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
        
        # Get external IP
        echo "Waiting for external IP..."
        kubectl get service llm-chatbot-backend-service --watch --timeout=300s

  test-deployment:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: setup-build-publish-deploy
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Install GKE gcloud auth plugin'
      run: |-
        gcloud components install gke-gcloud-auth-plugin

    - name: Get GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Test deployment
      run: |-
        # Wait for pods to be ready
        kubectl wait --for=condition=ready pod -l app=llm-chatbot --timeout=300s
        
        # Get service info
        kubectl get pods,services,hpa -l app=llm-chatbot
        
        # Test health endpoint
        kubectl run test-curl --image=curlimages/curl:latest --rm -i --restart=Never -- \
          curl -f http://llm-chatbot-backend-service/health
        
        echo "Deployment test completed successfully!"

  cleanup-on-failure:
    name: Cleanup on Failure
    runs-on: ubuntu-latest
    needs: setup-build-publish-deploy
    if: failure()
    
    steps:
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Install GKE gcloud auth plugin'
      run: |-
        gcloud components install gke-gcloud-auth-plugin

    - name: Rollback on failure
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
        kubectl rollout undo deployment/$DEPLOYMENT_NAME || echo "No previous revision to rollback to" 